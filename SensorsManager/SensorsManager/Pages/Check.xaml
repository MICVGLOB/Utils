<UserControl x:Class="SensorsManager.Pages.Check"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SensorsManager.Pages"
             xmlns:viewModels="clr-namespace:Mvvm.ViewModels" 
             xmlns:mvvm="clr-namespace:Mvvm"
             xmlns:mcore="clr-namespace:Mvvm.Core"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="500">
    <UserControl.DataContext>
        <viewModels:CheckViewModel/>
    </UserControl.DataContext>
    <Grid VerticalAlignment="Center">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="5*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <CheckBox Content="Опрос датчика" Margin="10,10,0,10" VerticalAlignment="Center" IsChecked="{Binding IsContinuesReading, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <Button Grid.Column="1" Margin="10,10,0,10" Command="{Binding ReadCommand}">
            <Button.Content>
                <StackPanel Orientation="Horizontal" Opacity="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=Button}, Converter={mcore:BooleanToOpacityConverter Opacity=0.35, Invert=True}}">
                    <Image Height="32" Width="32" UseLayoutRounding="True" SnapsToDevicePixels="True" Source="/Images/Read_32x32.png"/>
                    <TextBlock Text="Прочитать" Margin="10,0,0,0" VerticalAlignment="Center"/>
                </StackPanel>
            </Button.Content>
        </Button>
        <CheckBox Grid.Column="2" Margin="10,10,0,10" VerticalAlignment="Center" Content="Разблокировать"
                              IsChecked="{Binding UnlockRequired, Mode=TwoWay}" IsEnabled="{Binding EnableInteraction}"/>
        <Button Grid.Column="3" Margin="10" Command="{Binding WriteCommand}">
            <Button.Content>
                <StackPanel Orientation="Horizontal" Opacity="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=Button}, Converter={mcore:BooleanToOpacityConverter Opacity=0.35, Invert=True}}">
                    <Image Height="32" Width="32" UseLayoutRounding="True" SnapsToDevicePixels="True" Source="/Images/Write_32x32.png"/>
                    <TextBlock Text="Записать" Margin="10,0,0,0" VerticalAlignment="Center"/>
                </StackPanel>
            </Button.Content>
        </Button>
        <Grid Grid.Row="1" Grid.ColumnSpan="4">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6*"/>
                <ColumnDefinition Width="4*"/>
            </Grid.ColumnDefinitions>
            <GroupBox Grid.RowSpan="2" Header="Регистры" Padding="10" Margin="10,0,10,10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Номер регистра Modbus" VerticalAlignment="Center"/>
                    <TextBox x:Name="startReg" Grid.Column="2" IsEnabled="{Binding IsChecked, ElementName=NoDecodeSelector}" VerticalContentAlignment="Center" Height="22"  Padding="3,0,0,0"
                             IsReadOnly="{Binding EnableInteraction, Converter={mcore:BooleanNegationConverter}}">
                        <mcore:Interaction.Behaviors>
                            <mcore:IntegerValidationBehvior x:Name="startRegBehavior" DefaultValue="0" MinValue="0" Value="{Binding StartRegNumber, Mode=TwoWay}" MaxValue="1000"/>
                        </mcore:Interaction.Behaviors>
                    </TextBox>
                    <TextBlock Grid.Row="2" Text="Количество регистров" VerticalAlignment="Center"/>
                    <Border Grid.Row="2" Grid.Column="2" BorderBrush="Transparent" BorderThickness="0" Background="Transparent"
                            IsEnabled="{Binding EnableInteraction}">
                        <ComboBox x:Name="regsQuantity" SelectedIndex="4" IsEnabled="{Binding IsChecked, ElementName=NoDecodeSelector}" 
                                              HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"                                             
                                              SelectedValue="{Binding Quantity, Mode=TwoWay}">
                            <ComboBox.Items>
                                <sys:Int32>1</sys:Int32>
                                <sys:Int32>2</sys:Int32>
                                <sys:Int32>3</sys:Int32>
                                <sys:Int32>4</sys:Int32>
                                <sys:Int32>5</sys:Int32>
                            </ComboBox.Items>
                        </ComboBox>
                    </Border>
                    <GroupBox Grid.Row="4" Grid.ColumnSpan="3" Header="Значения" Padding="10">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="10"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="10"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="10"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="10"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock VerticalAlignment="Center" Text="{Binding ElementName=startRegBehavior, Path=Value, Converter={mvvm:NumericToRegNumberConverter Offset=0}}"/>
                            <TextBox x:Name="Reg_Number1" Grid.Column="2" VerticalContentAlignment="Center" Height="22"  Padding="3,0,0,0"
                                     IsReadOnly="{Binding EnableInteraction, Converter={mcore:BooleanNegationConverter}}">
                                <mcore:Interaction.Behaviors>
                                    <mcore:IntegerValidationBehvior x:Name="Reg_Number1Behavior" DefaultValue="0" MinValue="0"  MaxValue="65535" Value="{Binding Reg1Value, Mode=TwoWay}"/>
                                </mcore:Interaction.Behaviors>
                            </TextBox>
                            <TextBlock Grid.Row="2" VerticalAlignment="Center" Text="{Binding ElementName=startRegBehavior, Path=Value, Converter={mvvm:NumericToRegNumberConverter Offset=1}}"/>
                            <TextBox x:Name="Reg_Number2" Grid.Row="2" Grid.Column="2" VerticalContentAlignment="Center" Height="22" Padding="3,0,0,0"
                                     IsReadOnly="{Binding EnableInteraction, Converter={mcore:BooleanNegationConverter}}" IsEnabled="{Binding Quantity, Converter={mvvm:RegsQuantityToBooleanConverter Count=2}}">
                                <mcore:Interaction.Behaviors>
                                    <mcore:IntegerValidationBehvior x:Name="Reg_Number2Behavior" DefaultValue="0" MinValue="0" MaxValue="65535" Value="{Binding Reg2Value, Mode=TwoWay}"/>
                                </mcore:Interaction.Behaviors>
                            </TextBox>
                            <TextBlock Grid.Row="4" VerticalAlignment="Center" Text="{Binding ElementName=startRegBehavior, Path=Value, Converter={mvvm:NumericToRegNumberConverter Offset=2}}"/>
                            <TextBox x:Name="Reg_Number3" Grid.Row="4" Grid.Column="2" VerticalContentAlignment="Center" Height="22" Padding="3,0,0,0"
                                     IsReadOnly="{Binding EnableInteraction, Converter={mcore:BooleanNegationConverter}}" IsEnabled="{Binding Quantity, Converter={mvvm:RegsQuantityToBooleanConverter Count=3}}">
                                <mcore:Interaction.Behaviors>
                                    <mcore:IntegerValidationBehvior x:Name="Reg_Number3Behavior" DefaultValue="0" MinValue="0" MaxValue="65535" Value="{Binding Reg3Value, Mode=TwoWay}"/>
                                </mcore:Interaction.Behaviors>
                            </TextBox>
                            <TextBlock Grid.Row="6" VerticalAlignment="Center" Text="{Binding ElementName=startRegBehavior, Path=Value, Converter={mvvm:NumericToRegNumberConverter Offset=3}}"/>
                            <TextBox x:Name="Reg_Number4" Grid.Row="6" Grid.Column="2" VerticalContentAlignment="Center" Height="22" Padding="3,0,0,0"
                                     IsReadOnly="{Binding EnableInteraction, Converter={mcore:BooleanNegationConverter}}" IsEnabled="{Binding Quantity, Converter={mvvm:RegsQuantityToBooleanConverter Count=4}}">
                                <mcore:Interaction.Behaviors>
                                    <mcore:IntegerValidationBehvior x:Name="Reg_Number4Behavior" DefaultValue="0" MinValue="0" MaxValue="65535" Value="{Binding Reg4Value, Mode=TwoWay}"/>
                                </mcore:Interaction.Behaviors>
                            </TextBox>
                            <TextBlock Grid.Row="8" VerticalAlignment="Center" Text="{Binding ElementName=startRegBehavior, Path=Value, Converter={mvvm:NumericToRegNumberConverter Offset=4}}"/>
                            <TextBox x:Name="Reg_Number5" Grid.Row="8" Grid.Column="2" VerticalContentAlignment="Center" Height="22" Padding="3,0,0,0"
                                     IsReadOnly="{Binding EnableInteraction, Converter={mcore:BooleanNegationConverter}}" IsEnabled="{Binding Quantity, Converter={mvvm:RegsQuantityToBooleanConverter Count=5}}">
                                <mcore:Interaction.Behaviors>
                                    <mcore:IntegerValidationBehvior x:Name="Reg_Number5Behavior" DefaultValue="0" MinValue="0" MaxValue="65535" Value="{Binding Reg5Value, Mode=TwoWay}"/>
                                </mcore:Interaction.Behaviors>
                            </TextBox>
                            <TextBlock Grid.Row="10" VerticalAlignment="Center" Text="Угол отвеса"
                                       Opacity="{Binding ElementName=NoDecodeSelector, Path=IsChecked, Converter={mcore:BooleanToOpacityConverter Opacity=0.35}}"/>
                            <TextBox x:Name="OffsetAngle" Grid.Row="10" Grid.Column="2" IsReadOnly="True" VerticalContentAlignment="Center" Height="22" Padding="3,0,0,0"
                                     Opacity="{Binding ElementName=NoDecodeSelector, Path=IsChecked, Converter={mcore:BooleanToOpacityConverter Opacity=0.35}}">
                                <mcore:Interaction.Behaviors>
                                    <mcore:DoubleValidationBehvior x:Name="OffsetAngleBehavior" DefaultValue="0" MinValue="-20.0" MaxValue="20.0" Value="{Binding OffsetAngle, Mode=TwoWay}"/>
                                </mcore:Interaction.Behaviors>
                            </TextBox>
                        </Grid>
                    </GroupBox>
                </Grid> 
            </GroupBox>
            <GroupBox Grid.Column="1" Header="Расшифровка ошибок" Padding="10" Margin="0,0,10,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <RadioButton x:Name="NoDecodeSelector" Content="Без расшифровки" IsChecked="{Binding NoDecodeSelector, Mode=TwoWay}"
                                 IsEnabled="{Binding EnableInteraction}"/>
                    <RadioButton x:Name="LevelDecodeSelector" Grid.Row="2" Content="Ошибки уровнемера" IsChecked="{Binding LevelDecodeSelector, Mode=TwoWay}"
                                 IsEnabled="{Binding EnableInteraction}"/>
                    <RadioButton x:Name="VelocityDecodeSelector" Grid.Row="4" Content="Ошибки скоростемера" IsChecked="{Binding VelocityDecodeSelector, Mode=TwoWay}"
                                 IsEnabled="{Binding EnableInteraction}"/>
                </Grid>
            </GroupBox>
            <GroupBox Grid.Row="1" Grid.Column="1" Header="Флаги" Padding="10" Margin="0,0,10,10"
                      Opacity="{Binding ElementName=NoDecodeSelector, Path=IsChecked, Converter={mcore:BooleanToOpacityConverter Opacity=0.35}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="9*"/>
                    </Grid.ColumnDefinitions>
                    <Border x:Name="NoWriteCoeffIndicator" Background="{Binding NoWriteCoeffError, Converter={mvvm:BooleanToBrushConverter}}" BorderThickness="0"/>
                    <TextBlock Grid.Column="2" VerticalAlignment="Center" Text="Не записаны коэфф-ты"/>
                    <Border x:Name="AngleExceed90Indicator" Grid.Row="2" Background="{Binding AngleExceed90Error, Converter={mvvm:BooleanToBrushConverter}}" BorderThickness="0"/>
                    <TextBlock Grid.Row="2" Grid.Column="2" VerticalAlignment="Center" Text="Угол превышает 90 град."/>
                    <Border x:Name="NoLevelIndicator" Grid.Row="4" Background="{Binding NoLevelError, Converter={mvvm:BooleanToBrushConverter}}" BorderThickness="0"
                            Opacity="{Binding ElementName=LevelDecodeSelector, Path=IsChecked, Converter={mcore:BooleanToOpacityConverter Opacity=0.35}}"/>
                    <TextBlock Grid.Row="4" Grid.Column="2" VerticalAlignment="Center" Text="Не получен уровень"
                            Opacity="{Binding ElementName=LevelDecodeSelector, Path=IsChecked, Converter={mcore:BooleanToOpacityConverter Opacity=0.35}}"/>
                    <Border x:Name="CalculationErrorIndicator" Grid.Row="6" Background="{Binding CalculationError, Converter={mvvm:BooleanToBrushConverter}}" BorderThickness="0"/>
                    <TextBlock Grid.Row="6" Grid.Column="2" VerticalAlignment="Center" Text="Ошибка математики"/>
                    <Border x:Name="NegativeVelocityIndicator" Grid.Row="8" Background="{Binding NegativeVelocityError, Converter={mvvm:BooleanToBrushConverter}}" BorderThickness="0"
                            Opacity="{Binding ElementName=LevelDecodeSelector, Path=IsChecked, Converter={mcore:BooleanToOpacityConverter Opacity=0.35}}"/>
                    <TextBlock Grid.Row="8" Grid.Column="2" VerticalAlignment="Center" Text="Отрицательная скорость"
                               Opacity="{Binding ElementName=LevelDecodeSelector, Path=IsChecked, Converter={mcore:BooleanToOpacityConverter Opacity=0.35}}"/>
                    <Border x:Name="OverflowIndicator" Grid.Row="10" Background="{Binding OverflowError, Converter={mvvm:BooleanToBrushConverter}}" BorderThickness="0"
                            Opacity="{Binding ElementName=VelocityDecodeSelector, Path=IsChecked, Converter={mcore:BooleanToOpacityConverter Opacity=0.35}}"/>
                    <TextBlock Grid.Row="10" Grid.Column="2" VerticalAlignment="Center" Text="Перелив"
                               Opacity="{Binding ElementName=VelocityDecodeSelector, Path=IsChecked, Converter={mcore:BooleanToOpacityConverter Opacity=0.35}}"/>
                    <Border x:Name="PipeOutOfFlameIndicator" Grid.Row="12" Background="{Binding PipeOutOfFlameError, Converter={mvvm:BooleanToBrushConverter}}" BorderThickness="0"
                            Opacity="{Binding ElementName=LevelDecodeSelector, Path=IsChecked, Converter={mcore:BooleanToOpacityConverter Opacity=0.35}}"/>
                    <TextBlock Grid.Row="12" Grid.Column="2" VerticalAlignment="Center" Text="Лопасть вне потока"
                               Opacity="{Binding ElementName=LevelDecodeSelector, Path=IsChecked, Converter={mcore:BooleanToOpacityConverter Opacity=0.35}}"/>
                    <Border x:Name="PipeTouchBottomIndicator" Grid.Row="14" Background="{Binding PipeTouchBottomError, Converter={mvvm:BooleanToBrushConverter}}" BorderThickness="0"
                            Opacity="{Binding ElementName=LevelDecodeSelector, Path=IsChecked, Converter={mcore:BooleanToOpacityConverter Opacity=0.35}}"/>
                    <TextBlock Grid.Row="14" Grid.Column="2" VerticalAlignment="Center" Text="Лопасть касается дна"
                               Opacity="{Binding ElementName=LevelDecodeSelector, Path=IsChecked, Converter={mcore:BooleanToOpacityConverter Opacity=0.35}}"/>
                    <Border x:Name="NoWirelessConnection" Grid.Row="16" Background="{Binding NoWirelessError, Converter={mvvm:BooleanToBrushConverter}}" BorderThickness="0">
                        <Border.Opacity>
                            <MultiBinding Converter="{mvvm:BooleanToOpacityMultiConverter Opacity=0.35}">
                                <Binding Path="DecodeErrorType"/>
                                <Binding Path="MainViewModel.SensorType"/>
                            </MultiBinding>
                        </Border.Opacity>
                    </Border>
                    <TextBlock Grid.Row="16" Grid.Column="2" VerticalAlignment="Center" Text="Нет связи по ВЧ">
                        <TextBlock.Opacity>
                            <MultiBinding Converter="{mvvm:BooleanToOpacityMultiConverter Opacity=0.35}">
                                <Binding Path="DecodeErrorType"/>
                                <Binding Path="MainViewModel.SensorType"/>
                            </MultiBinding>
                        </TextBlock.Opacity>
                    </TextBlock>
                </Grid>                
            </GroupBox>
        </Grid>
    </Grid>
</UserControl>
